[{"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\index.js":"1","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\App.js":"2","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\ToolbarComponent\\ToolbarComponent.js":"3","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\SearchExperimentComponent\\SearchExperimentComponent.js":"4","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\SearchExperimenterComponent\\SearchExperimenterComponent.js":"5","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\SearchComponent\\SearchComponent.js":"6","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\ExperimentComponent\\ExperimentComponent.js":"7","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Services\\ExcelService.js":"8"},{"size":301,"mtime":1609101441419,"results":"9","hashOfConfig":"10"},{"size":1042,"mtime":1609103173727,"results":"11","hashOfConfig":"10"},{"size":761,"mtime":1609101441419,"results":"12","hashOfConfig":"10"},{"size":1192,"mtime":1609102189250,"results":"13","hashOfConfig":"10"},{"size":922,"mtime":1609101855068,"results":"14","hashOfConfig":"10"},{"size":1485,"mtime":1609101824818,"results":"15","hashOfConfig":"10"},{"size":4421,"mtime":1609359730962,"results":"16","hashOfConfig":"10"},{"size":502,"mtime":1609359957133,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"isxrw2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\index.js",[],["37","38"],"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\App.js",[],"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\ToolbarComponent\\ToolbarComponent.js",[],"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\SearchExperimentComponent\\SearchExperimentComponent.js",[],"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\SearchExperimenterComponent\\SearchExperimenterComponent.js",[],"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\SearchComponent\\SearchComponent.js",[],"C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Components\\ExperimentComponent\\ExperimentComponent.js",["39","40"],"import { Component } from 'react';\r\nimport \"./ExperimentComponent.css\"\r\nimport { withRouter } from 'react-router-dom';\r\nimport ExcelService from '../../Services/ExcelService';\r\n\r\nconst stub = [\r\n    {\r\n        id: \"11111111111111111111111111111111111111111111111111111111\",\r\n        status: \"complete\"\r\n    },\r\n\r\n    {\r\n        id: \"22222\",\r\n        status: \"partially complete\"\r\n    },\r\n\r\n    {\r\n        id: \"33333\",\r\n        status: \"not complete\"\r\n    }\r\n]\r\n\r\nclass ExperimentComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {participants: stub, ids: [], chooseAll: false};\r\n    }\r\n\r\n    getTable = () => {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                {this.getHeaders()}\r\n                </thead>\r\n                <tbody>\r\n                {this.getTableLines()}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    getHeaders = () => {\r\n        return(\r\n            <tr className=\"table-row\">\r\n                <th>Download</th>\r\n                <th>ID</th>\r\n                <th>Completion Status</th>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    getTableLines = () => {\r\n        let lines = [];\r\n\r\n        this.state.participants.forEach(participant => {\r\n            lines.push(this.getTableLine(participant));\r\n        });\r\n\r\n        return lines;\r\n    }\r\n\r\n    onClick = (id) => {\r\n        if (this.state.chooseAll){\r\n            this.setState({chooseAll: false});\r\n        }\r\n\r\n        let newIds = this.state.ids;\r\n\r\n        if (!this.state.ids.includes(id)){\r\n            newIds.push(id);\r\n            console.log(newIds)\r\n\r\n            if (newIds.length == this.state.participants.length){\r\n                this.setState({chooseAll: true});\r\n            }\r\n        } else {\r\n            newIds = newIds.filter(item => item != id);\r\n            console.log(newIds)\r\n        }\r\n\r\n        this.setState({ids: newIds});\r\n    }\r\n\r\n    chooseAll = () => {\r\n        if (this.state.chooseAll){\r\n            this.setState({ids:[], chooseAll:false});\r\n        } else {\r\n            let newIds = this.state.participants.map(item => item.id);\r\n            this.setState({ids: newIds, chooseAll: true});\r\n        }\r\n    }\r\n\r\n    getTableLine = (participantData) => {\r\n        let chosen = this.state.ids.includes(participantData.id);\r\n        return(\r\n            <tr className=\"table-row\" key={participantData.id}>\r\n                <td><button onClick={this.onClick.bind(this, participantData.id)} className={(chosen) ? \"chosen-participant\" : \"download-button\"}/></td>\r\n                <td> <div className=\"id\">{participantData.id}</div></td>\r\n                <td>{participantData.status}</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    goToExperimenterPage = () => {\r\n        this.props.history.goBack();\r\n        \r\n    }\r\n\r\n    download = () => {\r\n        let e = new ExcelService();\r\n        e.excelExport();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"experimenter-name\" onClick={this.goToExperimenterPage.bind(this)}>{this.props.match.params.experimenterName}</h1>\r\n                <h2>{this.props.match.params.experimentName}</h2>\r\n                <div className=\"experiment-body\">\r\n                <div className=\"data-controls\">\r\n                    <div className=\"select-all\">\r\n                  <button className={this.state.chooseAll ? \"chosen-participant\" : \"download-button\"} onClick={this.chooseAll.bind(this)}></button>  \r\n                  <label>{\"Select all\"}</label>\r\n                  </div>\r\n                  <button onClick={this.download.bind(this)} className=\"download-csv\">{\"Download Selected\"}</button>\r\n                  <button className=\"download-csv\">{\"Download Selected Unified\"}</button>\r\n                </div>\r\n                <div className=\"table-metadata\">\r\n                    <div>\r\n                    <label>{\"Number of participants:\"}</label>\r\n                    <label>{this.state.participants.length}</label>\r\n                    </div>\r\n                    <div>\r\n                    <label>{\"Selected:\"}</label>\r\n                    <label>{this.state.ids.length}</label>\r\n                    </div>\r\n                    </div>\r\n                <this.getTable></this.getTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ExperimentComponent);","C:\\Users\\gali1\\OneDrive\\Documents\\Work\\experimenter-gui\\src\\Services\\ExcelService.js",["41"],"import ExcelJS from \"exceljs/dist/es5/exceljs.browser\";\r\nimport saveAs from \"file-saver\";\r\n\r\nclass ExcelService {\r\n    constructor(){}\r\n    excelExport = () => {\r\n        \r\n        let workbook = new ExcelJS.Workbook();\r\n\r\n        console.log(\"here\")\r\n        workbook.csv.writeBuffer().then((buffer) => {\r\n            saveAs(\r\n                new Blob([buffer], { type: \"application/octet-stream\" }),\r\n\r\n                'file.csv'\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport default ExcelService;",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":73,"column":31,"nodeType":"48","messageId":"49","endLine":73,"endColumn":33},{"ruleId":"46","severity":1,"message":"50","line":77,"column":49,"nodeType":"48","messageId":"49","endLine":77,"endColumn":51},{"ruleId":"51","severity":1,"message":"52","line":5,"column":5,"nodeType":"53","messageId":"54","endLine":5,"endColumn":20},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]